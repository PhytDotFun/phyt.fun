services:
    vault-agent:
        image: hashicorp/vault:latest
        container_name: vault-agent
        cap_add:
            - IPC_LOCK
        user: root
        security_opt:
            - no-new-privileges:true
        volumes:
            - ./tooling/vault:/vault/config:ro
            - ${CREDENTIALS_DIR:-./tooling/vault/credentials}:/vault/credentials:ro
            - ./tooling/vault/templates:/vault/templates:ro
            - vault-secrets:/vault/secrets # RW mount
        environment:
            - VAULT_ENV=dev
        entrypoint: >
            sh -c "mkdir -p /vault/secrets &&
                   chmod 0775 /vault/secrets &&
                   chown root:root /vault/secrets &&
                   exec vault agent -config=/vault/config/agent.hcl"
        restart: unless-stopped

    hono-api:
        image: phyt/hono-api
        build:
            context: .
            dockerfile: Dockerfile
            args:
                PROJECT: 'hono-api'
                NODE_ENV: 'production'
        container_name: hono-api
        depends_on:
            vault-agent:
                condition: service_started
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
        volumes:
            - vault-secrets:/vault/secrets:ro # RO mount
            - ./tooling/ops/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
        entrypoint: ['/usr/local/bin/docker-entrypoint.sh']
        environment:
            - WAIT_FOR_SECRET_FILE=/vault/secrets/hono-api.env
        command: ['node', 'dist/index.js']
        restart: unless-stopped

    workers:
        image: phyt/workers
        build:
            context: .
            dockerfile: Dockerfile
            args:
                PROJECT: 'workers'
                NODE_ENV: 'production'
        container_name: workers
        depends_on:
            vault-agent:
                condition: service_started
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
        volumes:
            - vault-secrets:/vault/secrets:ro # RO mount
            - ./tooling/ops/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
        entrypoint: ['/usr/local/bin/docker-entrypoint.sh']
        environment:
            - WAIT_FOR_SECRET_FILE=/vault/secrets/workers.env
        command: ['node', 'dist/index.js']
        restart: unless-stopped

    postgres:
        image: postgres:17
        container_name: postgres
        depends_on:
            - vault-agent
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./tooling/ops/docker-entrypoint.sh:/usr/local/bin/wait-for-secrets.sh:ro
            - vault-secrets:/vault/secrets:ro

        entrypoint:
            [
                '/usr/local/bin/wait-for-secrets.sh',
                'docker-entrypoint.sh',
                'postgres'
            ]
        environment:
            - WAIT_FOR_SECRET_FILE=/vault/secrets/postgres.env
            - POSTGRES_INITDB_ARGS=--auth=scram-sha-256 --auth-host=scram-sha-256 --auth-local=scram-sha-256
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -q -h 127.0.0.1 -p 5432']
            interval: 3s
            timeout: 3s
            start_period: 30s
            retries: 20
        restart: unless-stopped

    redis:
        image: redis:7-alpine
        container_name: redis
        restart: unless-stopped

volumes:
    vault-secrets:
    postgres-data:
