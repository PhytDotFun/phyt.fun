{
    "name": "phyt.fun",
    "private": true,
    "scripts": {
        "bootstrap": "tooling/vault/bootstrap.sh",
        "build": "turbo run build",
        "check:compiler": "turbo run check:compiler",
        "check:types": "turbo run check:types",
        "clean:root": "rm -rf node_modules && rm -rf .turbo && pnpm store prune",
        "clean:workspaces": "turbo run clean",
        "db:check": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/data-access db:check",
        "db:clean": "tooling/vault/inject.sh dev/hono-gateway pnpm run --filter=@phyt/data-access db:clean",
        "db:down": "docker compose down",
        "db:generate": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/data-access db:generate",
        "db:logs": "docker compose logs -f",
        "db:migrate": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/data-access db:migrate",
        "db:push": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/data-access db:push",
        "db:seed": "tooling/vault/inject.sh dev/hono-gateway pnpm run --filter=@phyt/data-access db:seed",
        "db:start": "docker compose start postgres",
        "db:stop": "docker compose stop postgres",
        "db:studio": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/data-access db:studio",
        "db:up": "docker compose up -d",
        "dev": "concurrently \"pnpm dev:web\" \"pnpm dev:gw\" \"pnpm dev:wrk\"",
        "dev:gw": "tooling/vault/inject.sh dev/hono-gateway pnpm --filter @phyt/hono-gateway dev",
        "dev:web": "tooling/vault/inject.sh dev/web pnpm --filter @phyt/web dev",
        "dev:wrk": "tooling/vault/inject.sh dev/workers pnpm --filter @phyt/workers dev",
        "flush": "pnpm run clean:workspaces && pnpm run clean:root",
        "format": "turbo run format",
        "lint": "pnpm syncpack lint --dependency-types prod,dev && turbo run lint",
        "lint:fix": "pnpm syncpack fix --dependency-types prod,dev && turbo run lint:fix",
        "prepare": "husky",
        "redis:start": "docker compose start redis",
        "redis:stop": "docker compose stop redis"
    },
    "devDependencies": {
        "@turbo/gen": "catalog:",
        "concurrently": "catalog:",
        "husky": "catalog:",
        "lint-staged": "catalog:",
        "prettier": "catalog:",
        "rimraf": "catalog:",
        "syncpack": "catalog:",
        "tsx": "catalog:",
        "turbo": "^2.5.5"
    },
    "engines": {
        "node": ">=22"
    },
    "packageManager": "pnpm@10.13.1"
}
