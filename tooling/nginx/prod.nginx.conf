events {
    worker_connections 1024;
    use epoll;
}

http {
    include mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Upstream for load balancing (future-proofing)
    upstream hono_backend {
        server hono-api:8000;
        keepalive 32;
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name phyt.fun www.phyt.fun;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name phyt.fun www.phyt.fun;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # SSL configuration (certificates should be mounted as volumes)
        ssl_certificate /etc/ssl/certs/phyt.fun.pem;
        ssl_certificate_key /etc/ssl/private/phyt.fun.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://hono_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Special rate limiting for auth endpoints
        location ~ ^/api/(auth|login|register) {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://hono_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Static assets with aggressive caching
        location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|svg|ico|woff2?|ttf|eot)$ {
            try_files $uri =404;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Content-Type-Options nosniff always;
            
            # Compress static files
            location ~* \.(?:js|mjs|css)$ {
                add_header Cache-Control "public, max-age=31536000, immutable";
                gzip_static on;
            }
        }
        
        # HTML files with no caching
        location ~* \.html$ {
            try_files $uri =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        
        # SPA fallback (must be last)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            
            # Security headers for SPA
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
        }
        
        # Health check endpoints
        location /health {
            access_log off;
            return 200 "production nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /api/health {
            access_log off;
            proxy_pass http://hono_backend/api/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
        }
    }
}