# Worker setup
events {
    worker_connections 4096;
    use epoll;
}

http {
    # Logging
    include mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    client_max_body_size 16M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Cloudflare real IP
    include /etc/nginx/cloudflare/ips-v4.conf;
    include /etc/nginx/cloudflare/ips-v6.conf;
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;

    # Map client IP
    map $http_cf_connecting_ip $real_client_ip {
        default $http_cf_connecting_ip;
        ""      $remote_addr;
    }

    # Rate limiting
    limit_req_zone  $binary_remote_addr zone=prod_api:20m   rate=20r/s;
    limit_req_zone  $binary_remote_addr zone=prod_login:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=addr:20m;
    limit_conn addr 200;

    # Upstream servers
    upstream hono_backend {
        least_conn;
        server hono-api-1:8000 max_fails=3 fail_timeout=10s;
        server hono-api-2:8000 max_fails=3 fail_timeout=10s;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 75s;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name phyt.fun *.phyt.fun;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name phyt.fun *.phyt.fun;

        # SSL settings
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        # Block requests missing CF header
        if ($http_cf_connecting_ip = "") { return 403; }
        set $client_ip $real_client_ip;

        # Nginx health check
        location = /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Backend health check
        location = /api/health {
            access_log off;
            proxy_pass http://hono_backend/api/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
        }

        # Auth endpoints
        location ~ ^/api/(auth|login|register) {
            limit_req zone=prod_login burst=5 nodelay;
            limit_req_status 429;
            proxy_pass http://hono_backend;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $client_ip;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  https;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header Connection "";
            proxy_connect_timeout 3s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # General API
        location /api/ {
            limit_req zone=prod_api burst=40 nodelay;
            limit_req_status 429;
            proxy_pass http://hono_backend;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $client_ip;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  https;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header Connection "";
            proxy_connect_timeout 3s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 64k;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # WebSocket
        location /api/ws {
            proxy_pass http://hono_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $client_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    # Nginx status
    server {
        listen 127.0.0.1:8081;
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
